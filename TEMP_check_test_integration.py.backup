#!/usr/bin/env python3
"""
√úberpr√ºfung der neuen Test-Integration
Testet, ob die neuen Funktionen automatisch in run_tests.py eingebunden sind
"""
import sys
import os

# Add project root to path
PROJECT_ROOT = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
sys.path.insert(0, PROJECT_ROOT)

from tests.test_element_controller import ElementControllerTests

def check_new_test_integration():
    """√úberpr√ºft ob neue Tests automatisch erkannt werden"""
    print("=== NEUE TEST-INTEGRATION √úBERPR√úFUNG ===")
    
    # Erstelle Test-Suite
    lTestSuite = ElementControllerTests()
    
    # Hole alle Test-Methoden
    lTestMethods = [method for method in dir(lTestSuite) if method.startswith('test_')]
    
    print(f"\nGefundene Test-Methoden: {len(lTestMethods)}")
    
    # Pr√ºfe auf neue Test-Methoden
    lNewTests = [
        'test_create_auxiliary_beam_points_basic',
        'test_create_auxiliary_beam_points_with_orientation', 
        'test_convert_beam_to_panel_single',
        'test_convert_beam_to_panel_multiple',
        'test_auxiliary_to_regular_workflow'
    ]
    
    print("\n--- NEUE TEST-METHODEN √úBERPR√úFUNG ---")
    lFoundNew = 0
    for lTestName in lNewTests:
        if lTestName in lTestMethods:
            print(f"‚úÖ {lTestName} - GEFUNDEN")
            lFoundNew += 1
        else:
            print(f"‚ùå {lTestName} - NICHT GEFUNDEN")
    
    print(f"\n--- ZUSAMMENFASSUNG ---")
    print(f"Erwartete neue Tests: {len(lNewTests)}")
    print(f"Gefundene neue Tests: {lFoundNew}")
    print(f"Gesamt Test-Methoden: {len(lTestMethods)}")
    
    if lFoundNew == len(lNewTests):
        print("\nüéâ ERFOLG: Alle neuen Tests sind automatisch integriert!")
        print("Die Tests werden bei 'python tests/run_tests.py' automatisch ausgef√ºhrt.")
    else:
        print(f"\n‚ö†Ô∏è  WARNUNG: {len(lNewTests) - lFoundNew} Tests fehlen in der Integration")
    
    # Zeige alle Test-Methoden f√ºr Debugging
    print("\n--- ALLE ELEMENT CONTROLLER TESTS ---")
    for i, lMethod in enumerate(sorted(lTestMethods), 1):
        lIsNew = "üÜï" if lMethod in lNewTests else "  "
        print(f"{i:2d}. {lIsNew} {lMethod}")
    
    return lFoundNew == len(lNewTests)

if __name__ == "__main__":
    check_new_test_integration()
