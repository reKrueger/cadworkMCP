#!/usr/bin/env python3
"""
Test-Script für die vollständige Utility Controller Implementation
Testet alle 7 Utility-Funktionen
"""
import asyncio
import sys
import os

# Add project root to path
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from controllers.utility_controller import CUtilityController

async def test_utility_controller():
    """Testet alle Utility Controller Funktionen"""
    print("=== UTILITY CONTROLLER COMPLETION TEST ===")
    
    lUtilityCtrl = CUtilityController()
    
    # Test 1: Display Refresh Management
    print("\n[TEST 1] Display Refresh Management")
    
    print("1.1 Disable Auto Display Refresh...")
    lResult = await lUtilityCtrl.disable_auto_display_refresh()
    print(f"   Result: {lResult}")
    
    print("1.2 Enable Auto Display Refresh...")
    lResult = await lUtilityCtrl.enable_auto_display_refresh()
    print(f"   Result: {lResult}")
    
    # Test 2: Message Output
    print("\n[TEST 2] Message Output Functions")
    
    print("2.1 Print Error Message...")
    lResult = await lUtilityCtrl.print_error("Test Error Message from MCP")
    print(f"   Result: {lResult}")
    
    print("2.2 Print Warning Message...")
    lResult = await lUtilityCtrl.print_warning("Test Warning Message from MCP")
    print(f"   Result: {lResult}")
    
    # Test 3: File & Project Information
    print("\n[TEST 3] File & Project Information")
    
    print("3.1 Get 3D File Path...")
    lResult = await lUtilityCtrl.get_3d_file_path()
    print(f"   Result: {lResult}")
    
    print("3.2 Get Project Data...")
    lResult = await lUtilityCtrl.get_project_data()
    print(f"   Result: {lResult}")
    
    # Test 4: System Information
    print("\n[TEST 4] System Information")
    
    print("4.1 Get Cadwork Version Info...")
    lResult = await lUtilityCtrl.get_cadwork_version_info()
    print(f"   Result: {lResult}")
    
    print("\n=== UTILITY CONTROLLER TEST COMPLETE ===")
    print("Alle 7 Utility-Funktionen wurden getestet!")
    print("Status: READY FOR 80 TOOLS TARGET!")

if __name__ == "__main__":
    asyncio.run(test_utility_controller())
