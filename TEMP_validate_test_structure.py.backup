#!/usr/bin/env python3
"""
Struktureller Test der Test-Suite - ASCII Version
Ueberprueft ob alle Tests korrekt erkannt werden ohne Cadwork-Verbindung
"""
import sys
import os

# Add project root to path
PROJECT_ROOT = os.path.dirname(os.path.abspath(__file__))
sys.path.insert(0, PROJECT_ROOT)

def test_import_structure():
    """Testet ob alle Test-Module korrekt importiert werden koennen"""
    print("=== TEST-IMPORT STRUKTUR PRUEFUNG ===")
    
    try:
        # Test imports
        from tests.test_config import TestSuite, TestResult
        print("[OK] test_config.py - OK")
        
        from tests.test_element_controller import ElementControllerTests
        print("[OK] test_element_controller.py - OK")
        
        from tests.test_geometry_controller import GeometryControllerTests
        print("[OK] test_geometry_controller.py - OK")
        
        from tests.test_attribute_controller import AttributeControllerTests
        print("[OK] test_attribute_controller.py - OK")
        
        from tests.test_visualization_controller import VisualizationControllerTests
        print("[OK] test_visualization_controller.py - OK")
        
        from tests.test_utility_controller import UtilityControllerTests
        print("[OK] test_utility_controller.py - OK")
        
        from tests.test_system import SystemTests
        print("[OK] test_system.py - OK")
        
        print("\n[SUCCESS] ALLE TEST-MODULE ERFOLGREICH IMPORTIERT!")
        return True
        
    except Exception as e:
        print(f"[ERROR] IMPORT-FEHLER: {e}")
        return False

def test_method_discovery():
    """Testet ob Test-Methoden korrekt erkannt werden"""
    print("\n=== TEST-METHODEN ERKENNUNG ===")
    
    try:
        from tests.test_element_controller import ElementControllerTests
        
        # Test-Suite erstellen
        suite = ElementControllerTests()
        
        # Test-Methoden sammeln
        test_methods = [method for method in dir(suite) if method.startswith('test_')]
        
        print(f"Element Controller Tests gefunden: {len(test_methods)}")
        
        # Pruefe auf neue Test-Methoden
        new_tests = [
            'test_create_auxiliary_beam_points_basic',
            'test_create_auxiliary_beam_points_with_orientation',
            'test_convert_beam_to_panel_single', 
            'test_convert_beam_to_panel_multiple',
            'test_auxiliary_to_regular_workflow'
        ]
        
        found_new = 0
        for test_name in new_tests:
            if test_name in test_methods:
                print(f"  [OK] {test_name}")
                found_new += 1
            else:
                print(f"  [X] {test_name} - NICHT GEFUNDEN")
        
        print(f"\nNeue Tests: {found_new}/{len(new_tests)} gefunden")
        print(f"Gesamt Tests: {len(test_methods)}")
        
        if found_new == len(new_tests):
            print("[SUCCESS] ALLE NEUEN TESTS KORREKT ERKANNT!")
            return True
        else:
            print("[WARNING] EINIGE TESTS FEHLEN")
            return False
            
    except Exception as e:
        print(f"[ERROR] FEHLER BEI METHODEN-ERKENNUNG: {e}")
        return False

if __name__ == "__main__":
    print("CADWORK MCP SERVER - TEST-STRUKTUR VALIDIERUNG")
    print("=" * 60)
    
    success1 = test_import_structure()
    success2 = test_method_discovery() 
    
    print("\n" + "=" * 60)
    if success1 and success2:
        print("[SUCCESS] ALLE STRUKTURELLEN TESTS ERFOLGREICH!")
        print("Die Test-Suite ist bereit fuer Ausfuehrung mit run_tests.py")
    else:
        print("[ERROR] STRUKTURELLE PROBLEME GEFUNDEN")
        print("Bitte Fehler beheben vor Test-Ausfuehrung")
